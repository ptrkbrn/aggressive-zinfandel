{"version":3,"sources":["sounds/intro1.mp3","sounds/intro2.mp3","sounds/intro3.mp3","sounds/intro4.mp3","sounds/intro5.mp3","Skyline.js","Titlecard.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Skyline","version","id","xmlns","xmlnsXlink","x","y","viewBox","style","enableBackground","xmlSpace","className","d","SubmitButton","onSubmit","type","onClick","TitleCard","props","handleSubmit","bind","handleSelect","onSelect","this","e","spellCheck","contentEditable","cardContent","React","Component","App","state","intro","showTitleCard","showStartButton","showControls","imgSource","handleButtonClick","handleReset","titleCards","intros","setState","Math","floor","random","length","document","querySelector","classList","add","preventDefault","titleCard","getElementById","htmlToImage","toJpeg","then","dataUrl","img","Image","src","appendChild","catch","error","console","setTimeout","remove","autoPlay","kind","href","download","defaultProps","intro1","intro2","intro3","intro4","intro5","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gIAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,0OCyC1BC,MAvCjB,WACI,OACE,gCACE,yBACEC,QAAQ,MACRC,GAAG,UACHC,MAAM,6BACNC,WAAW,+BACXC,EAAE,MACFC,EAAE,MACFC,QAAQ,qBACRC,MAAO,CAAEC,iBAAkB,0BAC3BC,SAAS,YAET,0BACEC,UAAU,UACVC,EAAE,4rCAaN,yBAAKD,UAAU,eACb,yBAAKT,GAAG,SACN,uCACA,2BAAG,yDC/BTW,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACnB,4BAAQC,KAAK,SAASJ,UAAU,MAAMK,QAASF,GAA/C,aAyCaG,E,YAjCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAHH,E,6EAQjBE,EADqBC,KAAKL,MAAlBI,c,mCAIGE,IAEXV,EADqBS,KAAKL,MAAlBJ,UACCU,K,+BAIT,OACE,oCACE,yBAAKb,UAAU,YAAYT,GAAG,aAC5B,yBAAKA,GAAG,aAAauB,WAAW,QAAQT,QAASO,KAAKF,aAAcK,iBAAe,GAAEH,KAAKL,MAAMS,cAElG,kBAAC,EAAD,CAAcb,SAAUS,KAAKJ,oB,GAvBbS,IAAMC,W,qFCCxBC,E,YAqBJ,WAAYZ,GAAQ,IAAD,8BACjB,4CAAMA,KACDa,MAAQ,CACXC,MAAO,GACPC,eAAe,EACfC,iBAAiB,EACjBC,cAAc,EACdR,YAAa,GACbS,UAAW,IAEb,EAAKC,kBAAoB,EAAKA,kBAAkBjB,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKkB,YAAc,EAAKA,YAAYlB,KAAjB,gBAbF,E,iFAgBE,IAAD,EACaG,KAAKL,MAA5BqB,EADU,EACVA,WAAYC,EADF,EACEA,OACpBjB,KAAKkB,SAAS,CACZT,MAAOQ,EAAOE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAOK,SAChDlB,YAAaY,EAAWG,KAAKC,MAAMD,KAAKE,SAAWL,EAAWM,a,0CAI7C,IAAD,EACyBtB,KAAKQ,MAAxCE,EADU,EACVA,cAAeC,EADL,EACKA,gBACvBX,KAAKkB,SAAS,CACZR,eAAgBA,EAChBC,iBAAkBA,IAEpBY,SAASC,cAAc,UAAUC,UAAUC,IAAI,mB,qCAI/C1B,KAAKkB,SAAS,CACZd,YAAa,iC,mCAIJH,GAAI,IAAD,OACdA,EAAE0B,iBACF,IAAMC,EAAYL,SAASM,eAAe,cAC1CC,IAAYC,OAAOH,GAChBI,MAAK,SAACC,GACL,IAAMC,EAAM,IAAIC,MAChBD,EAAIE,IAAMH,EACV,EAAKf,SAAS,CAAEL,UAAWqB,EAAIE,MAC/Bb,SAASC,cAAc,kBAAkBa,YAAYH,MAEtDI,OAAM,SAACC,GACNC,QAAQD,MAAM,8BAA+BA,MAEjDE,YAAW,WAAO,IAAD,EACyB,EAAKjC,MAArCE,EADO,EACPA,cAAeE,EADR,EACQA,aACvB,EAAKM,SAAS,CACZR,eAAgBA,EAChBE,cAAeA,MAEhB,O,oCAGU,IAAD,EAC4BZ,KAAKQ,MAArCI,EADI,EACJA,aAAcF,EADV,EACUA,cACdM,EAAehB,KAAKL,MAApBqB,WACRhB,KAAKkB,SAAS,CACZN,cAAeA,EACfF,eAAgBA,EAChBN,YAAaY,EAAWG,KAAKC,MAAMD,KAAKE,SAAWL,EAAWM,WAEpDC,SAASC,cAAc,OAC/BkB,W,+BAGI,IAAD,EAGH1C,KAAKQ,MADPC,EAFK,EAELA,MAAOC,EAFF,EAEEA,cAAeC,EAFjB,EAEiBA,gBAAiBC,EAFlC,EAEkCA,aAAcR,EAFhD,EAEgDA,YAAaS,EAF7D,EAE6DA,UAEpE,OACE,yBAAKzB,UAAU,OACb,2BAAOuD,UAAQ,EAAChE,GAAG,QAAQyD,IAAK3B,GAAO,2BAAOmC,KAAK,cACnD,kBAAC,EAAD,MACCjC,EACG,uBAAGvB,UAAU,gBAAgByD,KAAK,aAAapD,QAASO,KAAKc,mBAA7D,qBACA,KACFJ,EAEE,kBAAC,EAAD,CACEN,YAAaA,EACbL,SAAUC,KAAKF,aACfP,SAAUS,KAAKJ,eAGjB,KACJ,yBAAKjB,GAAG,kBACNiC,EAEE,6BACE,uBAAGxB,UAAU,MAAMyD,KAAMhC,EAAWiC,SAAU3B,KAAKC,MAAsB,IAAhBD,KAAKE,WAA9D,QACA,4BAAQ7B,KAAK,SAASJ,UAAU,MAAMK,QAASO,KAAKe,aAApD,iBAGF,U,GA1HMV,IAAMC,WAAlBC,EACGwC,aAAe,CACpB/B,WAAY,CACV,0CACA,mBACA,sBACA,kBACA,gCACA,oCACE,4DACA,+CAEF,gBACA,oCACE,mDACA,oDAEF,uFAEFC,OAAQ,CAAC+B,IAAQC,IAAQC,IAAQC,IAAQC,MA6G9B7C,QChIK8C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASpC,SAASM,eAAe,SD2H3C,kBAAmB+B,WACrBA,UAAUC,cAAcC,MAAM9B,MAAK,SAAA+B,GACjCA,EAAaC,kB","file":"static/js/main.50e68212.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/intro1.d3d1e589.mp3\";","module.exports = __webpack_public_path__ + \"static/media/intro2.e3fc4462.mp3\";","module.exports = __webpack_public_path__ + \"static/media/intro3.80e36ee8.mp3\";","module.exports = __webpack_public_path__ + \"static/media/intro4.027248ae.mp3\";","module.exports = __webpack_public_path__ + \"static/media/intro5.881c465d.mp3\";","import React from 'react';\n\nfunction Skyline() {\n    return (\n      <header>\n        <svg\n          version=\"1.1\"\n          id=\"Layer_2\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n          x=\"0px\"\n          y=\"0px\"\n          viewBox=\"0 0 1143.08 794.94\"\n          style={{ enableBackground: 'new 0 0 1143.08 794.94' }}\n          xmlSpace=\"preserve\"\n        >\n          <path\n            className=\"skyline\"\n            d=\"M83.59,623c0,0,7,4,12-11s2.34-202.33,2.34-202.33h58.14l1.65,210.09l9.91,0.33l1.32-74.99h37.33l1.32,76.31\n            l15.2,0.33l1.65-293.34l16.85-16.19h29.4l15.2,13.21l0.29,56.33l1.04,203.97l23.45,0.66V413.3l3.63-3.96l71.02-0.33l3.63,2.64\n            l1.32,98.77l4.29,2.97l7.27,0.33l5.62-1.98l1.32-4.96l1.32-202.49h78.62l1.98,278.47c0,0,6.61,11.89,12.88-0.33\n            c6.28-12.22,1.65-212.73,1.65-212.73l38.98-36.34l41.62,37.99v71.68l1.32,4.96l2.97,2.64l26.43-0.99l3.3-2.31l1.32-4.62l3.3-34.35\n            l11.89-59.79c0,0,7.28-75.55-6.17-116.51c-7.81-23.8-38.16-21.55-40.41-23.55c-20.48-18.17-25.79-13.06-29.73-13.87\n            c-3.94-0.81,23.12-4.62,23.12-4.62l6.94-9.25l52.85-13.21l3.3-15.2l6.94-4.29l2.64-49.88l3.63,50.87l8.26,4.96v12.22l54.84,17.18\n            l16.19,9.91l12.22,1.32l-25.44,1.98l-1.98,5.95l-1.32,6.28l-5.62,2.64l-20.81,1.32c0,0-15.53,1.98-20.81,50.21\n            s4.29,112.31,4.29,112.31l38.65,0.66l1.98,3.96l0.99,23.12h114.96l1.65,139.73l2.64,4.29l10.24-0.66l4.29-3.96V334.68l4.62-2.97\n            l8.92-26.1l3.96-1.98l7.93-29.07l4.96-4.62v-4.29l1.32-18.5l7.93-5.29l5.95-10.9c0,0-0.2-17.84,2.31-16.85\n            c2.51,0.99,5.29,19.16,5.29,19.16l2.64,8.26l5.62,4.96l2.64,24.44l4.29,4.62l6.28,26.1l4.96,2.97l7.93,20.48v5.29l3.96,3.3\n            l2.31,287.39l9.58-0.33l2.97-2.31l1.32-159.88l13.21,0.33\"\n          />\n        </svg>\n        <div className=\"header-text\">\n          <div id=\"title\">\n            <h1>FRASIER</h1>\n            <p><em>Title Card Generator</em></p>\n          </div>\n        </div>\n      </header>\n    );\n  }\n\n  export default Skyline;\n  ","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SubmitButton = ({ onSubmit }) => (\n  <button type=\"submit\" className=\"btn\" onClick={onSubmit}>Generate</button>\n);\n\nSubmitButton.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nclass TitleCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n  }\n\n  handleSelect() {\n    const { onSelect } = this.props;\n    onSelect();\n  }\n\n  handleSubmit(e) {\n    const { onSubmit } = this.props;\n    onSubmit(e);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"titleCard\" id=\"titleCard\">\n          <div id=\"img-target\" spellCheck=\"false\" onClick={this.handleSelect} contentEditable>{this.props.cardContent}</div>\n        </div>\n        <SubmitButton onSubmit={this.handleSubmit} />\n      </>\n    );\n  }\n}\n\nTitleCard.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default TitleCard;\n","import React from 'react';\nimport 'normalize.css';\nimport './App.css';\nimport htmlToImage from 'html-to-image';\nimport Skyline from './Skyline';\nimport TitleCard from './Titlecard';\nimport intro1 from './sounds/intro1.mp3';\nimport intro2 from './sounds/intro2.mp3';\nimport intro3 from './sounds/intro3.mp3';\nimport intro4 from './sounds/intro4.mp3';\nimport intro5 from './sounds/intro5.mp3';\n\nclass App extends React.Component {\n  static defaultProps = {\n    titleCards: [\n      'WHERE\\'S A GRINDSTONE WHEN YOU NEED ONE?',\n      'DON JUAN IN HELL',\n      'OF MICE AND WOLFMEN',\n      'BONE APPÃ‰TIT',\n      'LONG NIGHT\\'S JOURNEY INTO DAY',\n      <>\n        <span>IT&apos;S NOT YOU, IT&apos;S ME. . .</span>\n        <span>NO, IT&apos;S YOU</span>\n      </>,\n      'SHIP OF FOOLS',\n      <>\n        <span>PROFESSOR CRANE&apos;S</span>\n        <span>SELF DELUSION 101</span>\n      </>,\n      'ONCE UPON A TIME FRASIER, ROZ, GIL, BULLDOG, AND TOOTY WENT TO THE BLACK TOWER. . .',\n    ],\n    intros: [intro1, intro2, intro3, intro4, intro5]\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      intro: '',\n      showTitleCard: false,\n      showStartButton: true,\n      showControls: false,\n      cardContent: '',\n      imgSource: '',\n    };\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleSelect = this.handleSelect.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  componentDidMount() {\n    const { titleCards, intros } = this.props;\n    this.setState({\n      intro: intros[Math.floor(Math.random() * intros.length)],\n      cardContent: titleCards[Math.floor(Math.random() * titleCards.length)],\n    });\n  }\n\n  handleButtonClick() {\n    const { showTitleCard, showStartButton } = this.state;\n    this.setState({\n      showTitleCard: !showTitleCard,\n      showStartButton: !showStartButton,\n    });\n    document.querySelector('header').classList.add('header-shrunk');\n  }\n\n  handleSelect() {\n    this.setState({\n      cardContent: <br />,\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const titleCard = document.getElementById('img-target');\n    htmlToImage.toJpeg(titleCard)\n      .then((dataUrl) => {\n        const img = new Image();\n        img.src = dataUrl;\n        this.setState({ imgSource: img.src });\n        document.querySelector('#generatedCard').appendChild(img);\n      })\n      .catch((error) => {\n        console.error('oops, something went wrong!', error);\n      });\n    setTimeout(() => {\n      const { showTitleCard, showControls } = this.state;\n      this.setState({\n        showTitleCard: !showTitleCard,\n        showControls: !showControls,\n      });\n    }, 500);\n  }\n\n  handleReset() {\n    const { showControls, showTitleCard } = this.state;\n    const { titleCards } = this.props;\n    this.setState({\n      showControls: !showControls,\n      showTitleCard: !showTitleCard,\n      cardContent: titleCards[Math.floor(Math.random() * titleCards.length)],\n    });\n    const img = document.querySelector('img');\n    img.remove();\n  }\n\n  render() {\n    const {\n      intro, showTitleCard, showStartButton, showControls, cardContent, imgSource,\n    } = this.state;\n    return (\n      <div className=\"App\">\n        <audio autoPlay id=\"intro\" src={intro}><track kind=\"captions\" /></audio>\n        <Skyline />\n        {showStartButton\n          ? <a className=\"btn start-btn\" href=\"#titleCard\" onClick={this.handleButtonClick}>Let&apos;s get better!</a>\n          : null}\n        { showTitleCard\n          ? (\n            <TitleCard\n              cardContent={cardContent}\n              onSelect={this.handleSelect}\n              onSubmit={this.handleSubmit}\n            />\n          )\n          : null}\n        <div id=\"generatedCard\" />\n        { showControls\n          ? (\n            <div>\n              <a className=\"btn\" href={imgSource} download={Math.floor(Math.random() * 10000)}>Save</a>\n              <button type=\"button\" className=\"btn\" onClick={this.handleReset}>Make another</button>\n            </div>\n          )\n          : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}